# Generated by Django 2.2.2 on 2019-10-19 09:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import useraccount.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailPasswordReset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=20, verbose_name='password_token')),
                ('email', models.EmailField(max_length=50, verbose_name='email')),
                ('send_time', models.DateTimeField(auto_now=True, verbose_name='send_time')),
            ],
            options={
                'verbose_name': 'password_token',
                'verbose_name_plural': 'password_token',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='verifycode')),
                ('email', models.EmailField(max_length=50, verbose_name='email')),
                ('send_time', models.DateTimeField(auto_now=True, verbose_name='send_time')),
            ],
            options={
                'verbose_name': 'verify_email',
                'verbose_name_plural': 'verify_email',
            },
        ),
        migrations.CreateModel(
            name='VisitHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(blank=True, null=True, verbose_name='login_time')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='logout_time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, default=uuid.UUID('296e5a71-461f-46de-8af3-dc080caadc71'), null=True)),
                ('organization', models.CharField(blank=True, max_length=128, verbose_name='Organization')),
                ('language', models.CharField(blank=True, default='zh_CN', max_length=10)),
                ('membership', models.CharField(choices=[('B', 'Bronze'), ('S', 'Silver'), ('D', 'Diamond'), ('P', 'Partner')], default='B', max_length=5)),
                ('tradesum_sons', models.IntegerField(default=0)),
                ('tradesum_grandsons', models.IntegerField(default=0)),
                ('telephone', models.CharField(blank=True, max_length=50, verbose_name='Telephone')),
                ('avatar', models.ImageField(blank=True, default='new.jpg', null=True, upload_to=useraccount.models.get_image_path)),
                ('id_image', models.ImageField(blank=True, default='id.png', null=True, upload_to=useraccount.models.get_ID_image_path)),
                ('wechat', models.ImageField(blank=True, default='id.png', null=True, upload_to=useraccount.models.get_wechat_image_path)),
                ('line', models.ImageField(blank=True, default='id.png', null=True, upload_to=useraccount.models.get_line_image_path)),
                ('approved', models.BooleanField(default=False)),
                ('canTakeBonus', models.BooleanField(default=False)),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=models.SET(useraccount.models.get_default_ancestor), related_name='sons', to=settings.AUTH_USER_MODEL)),
                ('grandfather', models.ForeignKey(blank=True, null=True, on_delete=models.SET(useraccount.models.get_default_ancestor), related_name='grandsons', to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=models.SET(useraccount.models.get_default_ancestor), related_name='decendants', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
